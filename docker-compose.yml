# FORTIS - Docker Compose para Desenvolvimento
version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fortis-postgres
    environment:
      POSTGRES_DB: fortis
      POSTGRES_USER: fortis
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fortis -d fortis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: fortis-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FORTIS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fortis-backend
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://fortis:password@postgres:5432/fortis
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # Frontend (ser√° adicionado posteriormente)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: fortis-frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: fortis-network
